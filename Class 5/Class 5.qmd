---
title: "Class 5: Data Viz with ggplot"
author: "Vivian Chau (PID: A16913056)"
format: pdf
---

## Intro to ggplot

There are many graphic systems in R (ways to make plots and figures). These include "base" R plots. Today we will focus mostly on the **ggplot2** package. 

> Q1. For which phases is data visualization important in our scientific workflows?

>**A.For communication of results, exploratory data analysis, and for detection of outliers.**

Let's start with a plot of a simple in-built dataset called `cars`.

```{r}
cars
```

```{r}
plot(cars)
```

> Q2. True or False? The ggplot2 package comes already installed with R?

>**A. False**

Let's see how we can make this figure using **ggplot**. First I need to install this package on my computer. To install any R package I use the function `install.packages()`

>I will run`install.packages("ggplot2") in my R console not this quarto document!

> Q. Which plot types are typically NOT used to compare distributions of numeric variables?

>**A. Network graphs**

> Q. Which statement about data visualization with ggplot2 is incorrect? 

>**A.ggplot 2 is the only way to create plots in R**

Before I can use any functions from add on packages I need to load the package from my "library()" with the `library(ggplot2)` call.

```{r}
library(ggplot2)
ggplot(cars)
```

All ggplot figures have at least 3 things(called layers). These include:

- **data** (the input dataset I want to plot from),
- **aes** (the aesthetic mapping of the data to my plot),
- **geoms** (the geom_point(), geom_line(), etc. that I want to draw).

```{r}
ggplot(cars)+
  aes(x=speed, y=dist)+
  geom_point()
```

Let's add a line to show the relationship here
```{r}
ggplot(cars)+
  aes(x=speed, y=dist)+
  geom_point()+
  geom_smooth(method="lm")+
  theme_bw()+
  labs(title="My first GGPLOT")
```



> Q. Which geometric layer should be used to create scatter plots in ggplot2?

>**A. geom_point()**


The code to read the dataset:

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```



> Q. How many genes are in this dataset?

>**A. There are 5196 genes in this dataset.**

```{r}
nrow(genes)
```

> Q. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find?

>**A. There are 4 columns.**

```{r}
colnames(genes)
ncol(genes)
```


> Q. Use the table() function on the State column of this data.frame to find out how many 'up' regulated genes there are. What is your answer? 

>**A. There are 127 'up' regulated genes.**

```{r}
table(genes$State)
```

> Q. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset?

>**A. 2.44% of the total genes is up-regulated in this dataset.**

```{r}
round(table(genes$State)/nrow(genes),4)
```

```{r}
n.tot<-nrow(genes)
vals<-table(genes$State)

vals.percent<-vals/n.tot*100
round(vals.percent, 2)
```


A first plot of this dataset:

```{r}
ggplot(genes)+
  aes(x=Condition1, y=Condition2, col=State)+
  geom_point()+
  theme_bw()+
  labs(title="Gene Expression changes upon drug treatment",
       x="Control Expression",
       y="Drug Pressence Expression")+
  scale_colour_manual(values=c("blue","gray","red"))

```

Before I can use any functions from add on packages I need to load the package from my "library()" with the `library(gapminder)` and `library(dplyr)` call.

```{r}
library(gapminder)
```

```{r}
library(dplyr)
```

The code to read the dataset:
```{r}
# File location online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)
head(gapminder)
```

```{r}
gapminder_2007<-gapminder %>% filter(year==2007)

```

Let's create a plot that shows the relationship between GDP per capita and the life expectancy in various continents, with the population size (in millions) shown.
```{r}
ggplot(gapminder_2007)+
  aes(x=gdpPercap, y=lifeExp, color=continent, size=pop)+
  geom_point(alpha=0.5)
```

Now, let's make a plot that colors the points based on the population size.

```{r}
ggplot(gapminder_2007)+
  aes(x=gdpPercap, y=lifeExp, color=pop)+
  geom_point(alpha=0.8)
```

Then, let's make a plot that changes the point size based on the population. 

```{r}
ggplot(gapminder_2007)+
  aes(x=gdpPercap, y=lifeExp, size=pop)+
  geom_point(alpha=0.5)+
  scale_size_area(max_size=10)
```

Lastly, we will make a plot to include 1957 and 2007 in our dataset.

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year==2007)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color=continent, size = pop)+ 
  geom_point(alpha=0.5) + 
  scale_size_area(max_size = 10) +
  facet_wrap(~year)
```

